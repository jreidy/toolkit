// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'model/location'], function(_, Backbone, Location) {
    var InterestMatcher;
    return InterestMatcher = (function(_super) {

      __extends(InterestMatcher, _super);

      function InterestMatcher() {
        return InterestMatcher.__super__.constructor.apply(this, arguments);
      }

      InterestMatcher.prototype.el = "#matches";

      InterestMatcher.prototype.initialize = function() {
        _.bindAll(this);
        return this.match();
      };

      InterestMatcher.prototype.match = function() {
        var current, i, j, match1, matchPromise, matched, potential, users, _results;
        console.log("hello, this is matcher");
        matched = [];
        users = this.model.toJSON();
        for (i in users) {
          current = users[i];
          if (current.has_match !== "false" || matched[current.email]) {
            continue;
          }
          for (j in users) {
            potential = users[j];
            if (current.email === potential.email || current.interest !== potential.interest || matched[potential.email]) {
              continue;
            } else {
              matched[current.email] = potential.email;
              matched[potential.email] = current.email;
              this.$el.append("<p> " + current.email + " matched with " + potential.email + "</p>");
              break;
            }
          }
        }
        _results = [];
        for (i in matched) {
          match1 = new Location;
          match1.set("id", i);
          console.log(i);
          matchPromise = match1.fetch();
          _results.push(matchPromise.done(this.saver(match1, matched[i])));
        }
        return _results;
      };

      InterestMatcher.prototype.saver = function(match, matchee) {
        match.set({
          has_match: matchee
        });
        match.save();
        return console.log(match.get("home"));
      };

      return InterestMatcher;

    })(Backbone.View);
  });

}).call(this);

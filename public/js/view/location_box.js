// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'model/location'], function(_, Backbone, Location) {
    var LocationBox;
    return LocationBox = (function(_super) {

      __extends(LocationBox, _super);

      function LocationBox() {
        return LocationBox.__super__.constructor.apply(this, arguments);
      }

      LocationBox.prototype.initialize = function() {
        var th;
        _.bindAll(this);
        this.r = Raphael("holder2");
        this.rect = this.r.rect(0, 0, 20, 20);
        this.rect.attr({
          fill: "#c45b5b",
          stroke: "",
          opacity: 0.80,
          r: 2
        });
        this.isInflated = false;
        this.popText = this.r.text(0, 0, "0");
        this.popText.attr({
          fill: "#fff",
          "font-size": 18,
          "font-family": "Helvetica Neue",
          "font-weight": "bold",
          "text-anchor": "start",
          "line-height": "190px"
        });
        this.popText.node.lineHeight = "50px";
        th = this;
        this.popText.node.onclick = function() {
          return th.flateBox();
        };
        this.rect.node.onclick = function() {
          return th.flateBox();
        };
        return console.log("initialize");
      };

      LocationBox.prototype.renderBox = function(xpos, ypos, number, list) {
        console.log("reached render, with " + xpos + " " + ypos);
        this.popText.animate({
          x: xpos,
          y: ypos
        }, 0, "backOut");
        this.popText.attr({
          text: number
        });
        this.x = xpos - 4;
        this.y = ypos - 11;
        this.width = this.popText.getBBox().width + 7;
        this.height = this.popText.getBBox().height;
        this.number = number;
        this.list = list;
        return this.rect.animate({
          x: this.x,
          y: this.y,
          width: this.width,
          height: this.height
        }, 0, "backOut");
      };

      LocationBox.prototype.flateBox = function() {
        var expandedHeight, expandedWidth, expandedX, expandedY, xmax, ymax;
        if (this.isInflated) {
          this.rect.animate({
            width: this.width,
            height: this.height,
            x: this.x,
            y: this.y
          }, 100, "backOut");
          this.popText.attr({
            text: this.number
          });
          this.popText.animate({
            x: this.x + 4
          });
          return this.isInflated = false;
        } else if (this.number > 0) {
          this.popText.attr({
            text: this.list
          });
          expandedWidth = this.popText.getBBox().width + 8;
          expandedHeight = this.popText.getBBox().height + 5;
          expandedY = this.y + this.height / 2 - expandedHeight / 2;
          expandedX = this.x;
          console.log(xmax = expandedY + expandedWidth);
          console.log(ymax = expandedY + expandedHeight);
          if (xmax > 320) {
            expandedX = 320 - expandedWidth - 10;
          }
          this.rect.animate({
            width: expandedWidth,
            height: expandedHeight,
            x: expandedX,
            y: expandedY
          }, 100, "backOut");
          this.popText.animate({
            x: expandedX + 4
          });
          return this.isInflated = true;
        }
      };

      return LocationBox;

    })(Backbone.View);
  });

}).call(this);

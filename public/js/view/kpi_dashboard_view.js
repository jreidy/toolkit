// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'util/util', 'model/user', 'model/loading', 'model/kpi_categories', 'view/navbar_view', 'view/loading_view', 'text!template/kpi_categories.html', 'view/tab_controller', 'view/data_visualization'], function(_, Backbone, Util, User, Loading, KpiCategories, NavbarView, LoadingView, KpiCategoriesTemplate, TabController, DataVisualization) {
    var KpiDashboardView;
    KpiDashboardView = (function(_super) {

      __extends(KpiDashboardView, _super);

      function KpiDashboardView() {
        return KpiDashboardView.__super__.constructor.apply(this, arguments);
      }

      KpiDashboardView.prototype.el = "#main";

      KpiDashboardView.prototype.template = _.template(KpiCategoriesTemplate);

      KpiDashboardView.prototype.initialize = function() {
        var body, navbarView;
        this.currentPie = 0;
        this.number = 4;
        this.selected = "t0";
        _.bindAll(this);
        this.bindEvents();
        this._preRender();
        this.model = new KpiCategories;
        this.user = new User;
        this.user.on("change:userName", this.userDataReady);
        this.currentCategoryIndex = 0;
        this.currentKPIIndex = 0;
        body = document.getElementById("body");
        body.className = "2";
        navbarView = new NavbarView({
          model: this.user
        });
        return this.model.on("reset", this.kpiCategoriesReady);
      };

      KpiDashboardView.prototype.bindEvents = function() {
        var eventName, events, i, id, _i, _j;
        this.$el.undelegate("#previousKPI");
        this.$el.undelegate("#nextKPI");
        for (i = _i = 0; _i < 4; i = ++_i) {
          this.$el.undelegate("tab_default" + i);
        }
        eventName = 'createTouch' in document ? 'tap' : 'click';
        events = {};
        events["" + eventName + " #previousKPI"] = "previousKPI";
        events["" + eventName + " #nextKPI"] = "nextKPI";
        for (i = _j = 0; _j < 4; i = ++_j) {
          id = "#t" + i;
          events["" + eventName + " " + id] = "tabSelected";
        }
        return this.delegateEvents(events);
      };

      KpiDashboardView.prototype._preRender = function() {
        return this.loadingView = new LoadingView;
      };

      KpiDashboardView.prototype.userDataReady = function() {
        this.model.access_token = this.user.getAccessToken();
        return this.fetchKpiCategories();
      };

      KpiDashboardView.prototype.fetchKpiCategories = function() {
        return this.model.fetch({
          dataType: "jsonp"
        });
      };

      KpiDashboardView.prototype.kpiCategoriesReady = function() {
        this.loadingView.empty();
        return this.render();
      };

      KpiDashboardView.prototype.render = function() {
        this.items = this.model.toJSON();
        this.$el.html(this.template);
        this.currentCategoryIndex = 0;
        this.currentKPIIndex = 0;
        this.updateContent();
        this.createTabs();
        this.dataVisualization = new DataVisualization;
        return this.updatePie();
      };

      KpiDashboardView.prototype.updateIndex = function(update, length, obj) {
        var lessLength;
        lessLength = length - 1;
        obj += update;
        if (obj > lessLength) {
          obj = 0;
        } else if (obj < 0) {
          obj = lessLength;
        }
        return obj;
      };

      KpiDashboardView.prototype.nextKPI = function() {
        this.currentKPIIndex = this.updateIndex(1, this.items[this.currentCategoryIndex].data.length, this.currentKPIIndex);
        this.updateContent();
        return this.updatePie();
      };

      KpiDashboardView.prototype.previousKPI = function() {
        this.currentKPIIndex = this.updateIndex(-1, this.items[this.currentCategoryIndex].data.length, this.currentKPIIndex);
        this.updateContent();
        return this.updatePie();
      };

      KpiDashboardView.prototype.updateContent = function() {
        this.$(".KPI_head").text(this.items[this.currentCategoryIndex].name);
        this.$(".numberLabel").text(this.items[this.currentCategoryIndex].data.length);
        return this.$(".kpiName").text(this.items[this.currentCategoryIndex].data[this.currentKPIIndex].name);
      };

      KpiDashboardView.prototype.updatePie = function() {
        var i, numberSlices, randomNumber, sliceArray, _i;
        this.currentPie = this.currentPie + 1;
        if (this.currentPie > 3) {
          this.currentPie = 1;
        }
        document.getElementById("pie").className = "pie_" + this.currentPie;
        sliceArray = [];
        numberSlices = Math.floor(Math.random() * 10) + 2;
        for (i = _i = 0; 0 <= numberSlices ? _i < numberSlices : _i > numberSlices; i = 0 <= numberSlices ? ++_i : --_i) {
          console.log(randomNumber = Math.floor(Math.random() * 9) + 1);
          sliceArray[i] = randomNumber;
        }
        console.log(sliceArray);
        return this.dataVisualization.renderPie(sliceArray);
      };

      KpiDashboardView.prototype.createTabs = function() {
        var tab_controller;
        return tab_controller = new TabController({
          model: this.number
        });
      };

      KpiDashboardView.prototype.tabSelected = function() {
        var z, zIndex;
        if (!(event.target.id === this.selected || event.target.className === "x_icon" || event.target.className === "tab_default_x")) {
          event.target.className = "tab_bar_selected";
          z = 101;
          document.getElementById(event.target.id).style.zIndex = z.toString();
          zIndex = 100 - this.selected[1] - 1;
          document.getElementById(this.selected).style.zIndex = zIndex.toString();
          if (this.selected === "t0") {
            document.getElementById(this.selected).className = "tab_bar_first";
          } else {
            document.getElementById(this.selected).className = "tab_default";
          }
          this.selected = event.target.id;
          this.currentKPIIndex = 0;
          this.currentCategoryIndex = this.selected[1];
          this.updateContent();
          return this.updatePie();
        }
      };

      return KpiDashboardView;

    })(Backbone.View);
    return KpiDashboardView;
  });

}).call(this);

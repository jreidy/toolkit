// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'text!template/interest.html'], function(_, Backbone, InterestsTemplate) {
    var InterestsView;
    InterestsView = (function(_super) {

      __extends(InterestsView, _super);

      function InterestsView() {
        return InterestsView.__super__.constructor.apply(this, arguments);
      }

      InterestsView.prototype.el = "#locations";

      InterestsView.prototype.template = _.template(InterestsTemplate);

      InterestsView.prototype.initialize = function() {
        _.bindAll(this);
        this.bindEvents();
        this.model.on("reset", this.render);
        return this.model.fetch();
      };

      InterestsView.prototype.bindEvents = function() {
        var eventName, events;
        this.$el.undelegate(".has_status");
        eventName = 'createTouch' in document ? 'tap' : 'click';
        events = {};
        events["" + eventName + " .has_status"] = "showUserStatus";
        return this.delegateEvents(events);
      };

      InterestsView.prototype.render = function() {
        this.length = this.model.length;
        this.$el.html(this.template({
          items: this.model.toJSON()
        }));
        this.$("#length").text(this.length);
        return this.showInterestMap();
      };

      InterestsView.prototype.showUserStatus = function(event) {
        var node, statusNode;
        node = $(event.target);
        statusNode = node.hasClass("has_status") ? node.find(".user_status") : node.parents(".has_status").find(".user_status");
        return alert($.trim(statusNode.html()));
      };

      InterestsView.prototype.showInterestMap = function() {
        var items, key, map, user, _results;
        items = this.model.toJSON();
        map = {};
        for (user in items) {
          key = items[user].interest;
          if (map[key]) {
            map[key] = map[key] + 1;
          } else {
            map[key] = 1;
          }
        }
        _results = [];
        for (key in map) {
          if (key) {
            _results.push($("#interest_map").append("<p> " + key + ": " + map[key] + " are interested</p>"));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      return InterestsView;

    })(Backbone.View);
    return InterestsView;
  });

}).call(this);

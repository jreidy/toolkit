// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'text!template/location.html', 'view/location_box', 'view/loading_view'], function(_, Backbone, LocationsTemplate, LocationBox, LoadingView) {
    var LocationsView;
    LocationsView = (function(_super) {

      __extends(LocationsView, _super);

      function LocationsView() {
        return LocationsView.__super__.constructor.apply(this, arguments);
      }

      LocationsView.prototype.el = "#locations";

      LocationsView.prototype.template = _.template(LocationsTemplate);

      LocationsView.prototype.initialize = function() {
        _.bindAll(this);
        this.bindEvents();
        this._preRender();
        this.model.on("reset", this.readyForAction);
        return this.model.fetch();
      };

      LocationsView.prototype.bindEvents = function() {
        var eventName, events;
        this.$el.undelegate(".has_status");
        eventName = 'createTouch' in document ? 'tap' : 'click';
        events = {};
        events["" + eventName + " .has_status"] = "showUserStatus";
        return this.delegateEvents(events);
      };

      LocationsView.prototype.readyForAction = function() {
        this.render();
        return this.loadingView.empty();
      };

      LocationsView.prototype.render = function() {
        this.items = this.model.toJSON();
        this.$el.html(this.template);
        this.header = document.createElement("H3");
        this.header.className = "location_header";
        this.$el.append(this.header);
        this.name = document.createElement("span");
        this.name.className = "location_name";
        this.$el.append(this.name);
        this.pop = document.createElement("p");
        this.pop.className = "pop";
        this.locationBox = new LocationBox;
        return this.updateLocationView("0");
      };

      LocationsView.prototype._preRender = function() {
        return this.loadingView = new LoadingView;
      };

      LocationsView.prototype.showUserStatus = function(event) {
        var node, statusNode;
        node = $(event.target);
        statusNode = node.hasClass("has_status") ? node.find(".user_status") : node.parents(".has_status").find(".user_status");
        return alert($.trim(statusNode.html()));
      };

      LocationsView.prototype.updateLocationView = function(loc) {
        var first, i, img, isSingleDigit, last, list, match, nameInList, numberAtLocation, username;
        img = document.getElementById("current_location_image");
        switch (loc) {
          case "0":
            match = "2nd St., SF, US";
            break;
          case "1":
            match = "CB, SF, US";
            break;
          case "2":
            match = "Beijing, CN";
            break;
          default:
            match = "Tokyo, JP";
        }
        numberAtLocation = 0;
        list = "";
        isSingleDigit = false;
        for (i in this.items) {
          if (this.items[i].current === match) {
            numberAtLocation++;
            username = this.items[i].userName;
            nameInList = "";
            first = username.indexOf(".", 0);
            last = username.lastIndexOf(".");
            if (first === last) {
              nameInList += username.substring(0, first);
              nameInList += " " + username.substring(first + 1, username.length);
            } else {
              nameInList += username.substring(first + 1, last);
              nameInList += " " + username.substring(last + 1, username.length);
            }
            list += nameInList + "\n";
          }
        }
        switch (loc) {
          case "0":
            img.className = "cali_orange";
            this.header.innerHTML = "UNITED STATES";
            this.name.innerHTML = "2ND STREET, SF";
            this.header.style.marginTop = "273px";
            this.name.style.marginTop = "296px";
            this.header.style.marginLeft = "40px";
            this.name.style.marginLeft = "41px";
            return this.locationBox.renderBox(85, 164, numberAtLocation, list);
          case "1":
            img.className = "cali_purple";
            this.header.innerHTML = "UNITED STATES";
            this.name.innerHTML = "CHINA BASIN, SF";
            this.header.style.marginTop = "273px";
            this.name.style.marginTop = "296px";
            this.header.style.marginLeft = "40px";
            this.name.style.marginLeft = "41px";
            return this.locationBox.renderBox(87, 165, numberAtLocation, list);
          case "2":
            img.className = "china_blue";
            this.header.innerHTML = "CHINA";
            this.name.innerHTML = "BEIJING";
            this.header.style.marginTop = "293px";
            this.name.style.marginTop = "316px";
            this.header.style.marginLeft = "60px";
            this.name.style.marginLeft = "61px";
            return this.locationBox.renderBox(212, 158, numberAtLocation, list);
          default:
            img.className = "japan_green";
            this.header.innerHTML = "JAPAN";
            this.name.innerHTML = "TOKYO";
            this.header.style.marginTop = "163px";
            this.name.style.marginTop = "186px";
            this.header.style.marginLeft = "50px";
            this.name.style.marginLeft = "51px";
            return this.locationBox.renderBox(210, 234, numberAtLocation, list);
        }
      };

      return LocationsView;

    })(Backbone.View);
    return LocationsView;
  });

}).call(this);

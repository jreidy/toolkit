// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'util/util', 'model/user', 'model/loading', 'model/spreadsheet_list', 'view/navbar_view', 'view/loading_view', 'text!template/project_list.html', 'view/tab_controller', 'view/project_view'], function(_, Backbone, Util, User, Loading, SpreadsheetList, NavbarView, LoadingView, ProjectListTemplate, TabController, ProjectView) {
    var ProjectListView;
    ProjectListView = (function(_super) {

      __extends(ProjectListView, _super);

      function ProjectListView() {
        return ProjectListView.__super__.constructor.apply(this, arguments);
      }

      ProjectListView.prototype.el = "#main";

      ProjectListView.prototype.template = _.template(ProjectListTemplate);

      ProjectListView.prototype.initialize = function() {
        var body, navbarView;
        this.selected = "t0";
        _.bindAll(this);
        this.number = 3;
        this.bindEvents();
        this._preRender();
        this.model = new SpreadsheetList;
        this.user = new User;
        this.user.on("change:userName", this.userDataReady);
        body = document.getElementById("body");
        body.className = "1";
        navbarView = new NavbarView({
          model: this.user
        });
        return this.model.on("reset", this.spreadSheetListReady);
      };

      ProjectListView.prototype.bindEvents = function() {
        var eventName, events, i, id, _i, _j;
        for (i = _i = 0; _i < 4; i = ++_i) {
          this.$el.undelegate("tab_default" + i);
        }
        eventName = 'createTouch' in document ? 'tap' : 'click';
        events = {};
        for (i = _j = 0; _j < 4; i = ++_j) {
          id = "#t" + i;
          events["" + eventName + " " + id] = "tabSelected";
        }
        return this.delegateEvents(events);
      };

      ProjectListView.prototype._preRender = function() {
        this.loadingView = new LoadingView({
          model: new Loading({
            "message": "rendering ProjectList page"
          })
        });
        return this.loadingView.render();
      };

      ProjectListView.prototype.userDataReady = function() {
        this.model.access_token = this.user.getAccessToken();
        return this.fetchProjectList();
      };

      ProjectListView.prototype.fetchProjectList = function() {
        return this.model.fetch({
          dataType: "jsonp"
        });
      };

      ProjectListView.prototype.spreadSheetListReady = function() {
        this.loadingView.empty();
        return this.render();
      };

      ProjectListView.prototype.render = function() {
        this.$el.html(this.template({
          items: this.model.toJSON()
        }));
        this.items = this.model.toJSON();
        console.log("---------");
        console.log(this.items);
        console.log("---------");
        this.createTabs();
        return this.renderCalendar();
      };

      ProjectListView.prototype.createTabs = function() {
        var tab_controller;
        return tab_controller = new TabController({
          model: this.number
        });
      };

      ProjectListView.prototype.renderCalendar = function() {
        return this.projectView = new ProjectView({
          items: this.items
        });
      };

      ProjectListView.prototype.tabSelected = function() {
        var z, zIndex;
        if (!(event.target.id === this.selected || event.target.className === "x_icon" || event.target.className === "tab_default_x")) {
          event.target.className = "tab_bar_selected";
          z = 101;
          document.getElementById(event.target.id).style.zIndex = z.toString();
          zIndex = 100 - this.selected[1] - 1;
          document.getElementById(this.selected).style.zIndex = zIndex.toString();
          if (this.selected === "t0") {
            document.getElementById(this.selected).className = "tab_bar_first";
          } else {
            document.getElementById(this.selected).className = "tab_default";
          }
          this.selected = event.target.id;
          return this.projectView.updateProjectView(this.selected[1]);
        }
      };

      return ProjectListView;

    })(Backbone.View);
    return ProjectListView;
  });

}).call(this);

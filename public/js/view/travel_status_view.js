// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'util/util', 'model/user', 'model/loading', 'model/location', 'view/navbar_view', 'view/loading_view', 'text!template/travel_status.html'], function(_, Backbone, Util, User, Loading, Location, NavbarView, LoadingView, TravelStatusTemplate) {
    var TravelStatusView;
    return TravelStatusView = (function(_super) {

      __extends(TravelStatusView, _super);

      function TravelStatusView() {
        return TravelStatusView.__super__.constructor.apply(this, arguments);
      }

      TravelStatusView.prototype.el = "#main";

      TravelStatusView.prototype.template = _.template(TravelStatusTemplate);

      TravelStatusView.prototype.initialize = function() {
        var navbarView;
        _.bindAll(this);
        this.bindEvents();
        this.router = window.EngApp.appRouter;
        this._preRender();
        this.user = new User;
        this.user.on("change:userName", this.userDataReady);
        return navbarView = new NavbarView({
          model: this.user
        });
      };

      TravelStatusView.prototype.bindEvents = function() {
        var eventName, events;
        this.$el.undelegate("#save");
        eventName = 'createTouch' in document ? 'tap' : 'click';
        events = {};
        events["" + eventName + " #save"] = "set";
        return this.delegateEvents(events);
      };

      TravelStatusView.prototype._preRender = function() {
        this.loadingView = new LoadingView({
          model: new Loading({
            "message": "rendering travel status page"
          })
        });
        return this.loadingView.render();
      };

      TravelStatusView.prototype.userDataReady = function() {
        this.loadingView.empty();
        this.location = new Location;
        this.location.set("id", this.user.get("email"));
        this.locationPromise = this.location.fetch();
        return this.locationPromise.done(this.render);
      };

      TravelStatusView.prototype.render = function() {
        return this.$el.html(this.template(this.location.toJSON()));
      };

      TravelStatusView.prototype.set = function(event) {
        var status,
          _this = this;
        status = this.$el.find("#status").val();
        if (!status) {
          alert("Travel Status can't be empty");
          return;
        }
        this.location.set({
          interest: status,
          last_modify: Date.now()
        });
        return this.location.save().done(function() {
          return _this.router.navigate("beacon", {
            trigger: true
          });
        });
      };

      return TravelStatusView;

    })(Backbone.View);
  });

}).call(this);

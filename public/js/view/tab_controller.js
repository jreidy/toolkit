// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'model/location'], function(_, Backbone, Location) {
    var TabController;
    return TabController = (function(_super) {

      __extends(TabController, _super);

      function TabController() {
        return TabController.__super__.constructor.apply(this, arguments);
      }

      TabController.prototype.initialize = function() {
        _.bindAll(this);
        return this.createTabs();
      };

      TabController.prototype.createTabs = function() {
        var i, position, tab, x, zIndex, _i, _results;
        console.log(this.model);
        _results = [];
        for (i = _i = 0; _i < 4; i = ++_i) {
          tab = document.createElement("DIV");
          tab.className = "tab_default";
          tab.id = "t" + i;
          position = i * 78 - 15;
          tab.style.marginLeft = position.toString() + "px";
          zIndex = 100 - i - 1;
          tab.style.zIndex = zIndex.toString();
          if (i === 0) {
            tab.style.zIndex = "101";
            tab.className = "tab_bar_selected";
          }
          $("#tab_bar").append(tab);
          if (i >= this.model) {
            x = document.createElement("DIV");
            x.className = "x_icon";
            $("#t" + i).append(x);
            _results.push(tab.className = "tab_default_x");
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      return TabController;

    })(Backbone.View);
  });

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'util/util', 'model/location'], function(_, Backbone, Util, Location) {
    var LocationCollection;
    LocationCollection = (function(_super) {

      __extends(LocationCollection, _super);

      function LocationCollection() {
        return LocationCollection.__super__.constructor.apply(this, arguments);
      }

      LocationCollection.prototype.countryAbbrs = {
        "Argentina": "ARG",
        "China": "CN",
        "Japan": "JP",
        "United States": "US"
      };

      LocationCollection.prototype.model = Location;

      LocationCollection.prototype.url = "/locations";

      LocationCollection.prototype.comparator = function(item) {
        return "" + (item.get('isTravelling')) + " " + (item.get('userName'));
      };

      LocationCollection.prototype.parse = function(response) {
        var _this = this;
        return _.map(response, function(item) {
          var current, email, home, lastModifyDate, match, _ref;
          email = item['email'];
          if (email) {
            match = /(.*)@/.exec(email);
            if (match) {
              item["userName"] = match[1];
            }
          }
          _ref = [item['current'], item['home']], current = _ref[0], home = _ref[1];
          item["isTravelling"] = current === home ? 'home' : 'away';
          lastModifyDate = new Date(parseInt(item["last_modify"]));
          item["lastModifyDayTime"] = "" + (lastModifyDate.getFullYear()) + "/" + (lastModifyDate.getMonth() + 1) + "/" + (lastModifyDate.getDate()) + " " + (lastModifyDate.getHours()) + ":" + (lastModifyDate.getMinutes());
          return item;
        });
      };

      return LocationCollection;

    })(Backbone.Collection);
    return LocationCollection;
  });

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'util/util', 'model/project_category', 'moment'], function(_, Backbone, Util, ProjectCategory, moment) {
    var ProjectCategories;
    ProjectCategories = (function(_super) {

      __extends(ProjectCategories, _super);

      function ProjectCategories() {
        return ProjectCategories.__super__.constructor.apply(this, arguments);
      }

      ProjectCategories.prototype.worksheetId = 1;

      ProjectCategories.prototype.model = ProjectCategory;

      ProjectCategories.prototype.url = function() {
        return "https://spreadsheets.google.com/feeds/list/" + this.id + "/" + this.worksheetId + "/private/full?v=3&alt=json-in-script&access_token=" + this.access_token;
      };

      ProjectCategories.prototype.initialize = function(model, options) {
        return this.id = options.id;
      };

      ProjectCategories.prototype.parse = function(response) {
        var categories, rows,
          _this = this;
        categories = [];
        rows = response.feed.entry;
        _.each(rows, function(row) {
          var category, length;
          if (!row.gsx$category) {
            return;
          }
          category = row.gsx$category.$t;
          if (category.length === 0) {
            length = categories.length;
            if (length > 0) {
              return categories[length - 1].subcategory.push(_this._parseSubCategory(row));
            }
          } else {
            return categories.push({
              name: category,
              subcategory: [_this._parseSubCategory(row)]
            });
          }
        });
        return categories;
      };

      ProjectCategories.prototype._parseSubCategory = function(row) {
        var endDate, startDate, subcatObj, subcategory;
        subcategory = row["gsx$sub-category"].$t;
        startDate = row.gsx$startdate.$t;
        endDate = row.gsx$enddate.$t;
        return subcatObj = {
          name: subcategory,
          startDate: startDate,
          endDate: endDate,
          workingWeeks: this._parseWorkingWeeks(startDate, endDate)
        };
      };

      ProjectCategories.prototype._parseWorkingWeeks = function(startDate, endDate) {
        var currentWeekMonday, end, endDiff, endindex, i, j, k, l, lastWeekSunday, start, startDiff, startindex, week, weekNumber, weeks, _i, _j, _k, _l, _ref;
        weeks = [];
        if ((startDate != null ? startDate.length : void 0) === 0 || (endDate != null ? endDate.length : void 0) === 0) {
          return weeks;
        }
        weekNumber = 8;
        start = moment(startDate, "M/D/YYYY");
        end = moment(endDate, "M/D/YYYY");
        currentWeekMonday = moment().day(1);
        lastWeekSunday = moment().day(7 + (weekNumber - 1) * 7);
        startDiff = Math.ceil(start.diff(currentWeekMonday, "days", true));
        endDiff = Math.ceil(lastWeekSunday.diff(end, "days", true));
        for (i = _i = 0; 0 <= weekNumber ? _i < weekNumber : _i > weekNumber; i = 0 <= weekNumber ? ++_i : --_i) {
          weeks[i] = "";
          week = [];
          if (startDiff >= i * 7 && startDiff <= i * 7 + 6) {
            startindex = startDiff - i * 7 + 1;
            for (j = _j = startindex; startindex <= 7 ? _j < 7 : _j > 7; j = startindex <= 7 ? ++_j : --_j) {
              week[j] = true;
            }
          }
          if (startDiff < i * 7 && endDiff < (weekNumber - i) * 7 - 6) {
            for (k = _k = 0; _k < 7; k = ++_k) {
              week[k] = true;
            }
          }
          if (endDiff >= (weekNumber - i) * 7 - 6 && endDiff <= (weekNumber - i) * 7) {
            endindex = (weekNumber - i) * 7 - endDiff + 1;
            for (l = _l = 0, _ref = endindex + 1; 0 <= _ref ? _l < _ref : _l > _ref; l = 0 <= _ref ? ++_l : --_l) {
              week[l] = true;
            }
          }
          weeks[i] = week;
        }
        return weeks;
      };

      return ProjectCategories;

    })(Backbone.Collection);
    return ProjectCategories;
  });

}).call(this);
